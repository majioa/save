write_word	proc	near
	push	ax
	push	BX
	xor	BX,BX
	mov	ah,0eh
write_word_1:
	lodsb
	CMP	AL,0DH
	JE	WRITE_WORD_CR
	CMP	AL,0AH
	JE	WRITE_WORD_LF
	or	al,al
	je	write_word_exit
	CALL	WRITE_SYMBOL
	jmp	short	write_word_1
WRITE_WORD_CR:
	MOV	AX,CS:[BEGIN_X_]
	MOV	CS:[X],AX
	JMP	SHORT	WRITE_WORD_1
WRITE_WORD_LF:
	MOV	AX,CS:[Y]
	INC	AX
	CMP	AX,CS:[END_Y_]
	JNE	WRITE_WORD_LF_1
	MOV	AX,CS:[BEGIN_Y_]
WRITE_WORD_LF_1:
	MOV	CS:[Y],AX
	JMP	SHORT	WRITE_WORD_1
write_word_exit:
	pop	BX
	pop	ax
	ret
endp
WRITE_SYMBOL	PROC	NEAR
	PUSH	AX
	PUSH	DX
	PUSH	SI
	PUSH	DI
	PUSH	DS
	PUSH	ES
	PUSH	AX
	MOV	AX,0B800H
	MOV	ES,AX
	MOV	DS,AX
	MOV	AX,CS:[Y]
	MOV	DI,160
	MUL	DI
	MOV	DI,CS:[X]
	ROL	DI,1
	ADD	DI,AX
	MOV	SI,DI
	POP	DX
	LODSW
	MOV	AL,DL
	STOSW
	MOV	SI,CS:[X]
	MOV	DI,CS:[Y]
	INC	SI
	CMP	SI,CS:[END_X_]
	JNE	WRITE_SYM_1
	MOV	SI,CS:[BEGIN_X_]
	INC	DI
	CMP	DI,CS:[END_Y_]
	JNE	WRITE_SYM_1
	MOV	DI,CS:[BEGIN_Y_]
WRITE_SYM_1:
	MOV	CS:[X],SI
	MOV	CS:[Y],DI
	POP	ES
	POP	DS
	POP	DI
	POP	SI
	POP	DX
	POP	AX
	RET
X	DW	0
Y	DW	0
BEGIN_X_	DW	0
BEGIN_Y_	DW	0
END_X_	DW	80
END_Y_	DW	25
ENDP
